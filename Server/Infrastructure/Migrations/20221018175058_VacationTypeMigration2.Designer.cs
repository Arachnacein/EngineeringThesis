// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20221018175058_VacationTypeMigration2")]
    partial class VacationTypeMigration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entites.Person.Duty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("WorkTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Duty");
                });

            modelBuilder.Entity("Domain.Entites.PersonalRequests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DutiesId")
                        .HasColumnType("int");

                    b.Property<int>("Id_Duty")
                        .HasColumnType("int");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("YesOrNo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DutiesId");

                    b.HasIndex("UserId");

                    b.ToTable("PersonalRequests");
                });

            modelBuilder.Entity("Domain.Entites.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DutiesId")
                        .HasColumnType("int");

                    b.Property<int>("Id_Duty")
                        .HasColumnType("int");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<int>("Id_WorkSector")
                        .HasColumnType("int");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkSectorsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DutiesId");

                    b.HasIndex("UsersId");

                    b.HasIndex("WorkSectorsId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("Domain.Entites.Swap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date2")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Duty1")
                        .HasColumnType("int");

                    b.Property<int>("Id_Duty2")
                        .HasColumnType("int");

                    b.Property<int>("Id_User1")
                        .HasColumnType("int");

                    b.Property<int>("Id_User2")
                        .HasColumnType("int");

                    b.Property<int>("Id_WorkSector1")
                        .HasColumnType("int");

                    b.Property<int>("Id_WorkSector2")
                        .HasColumnType("int");

                    b.Property<bool>("IsCheckedByAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Swap");
                });

            modelBuilder.Entity("Domain.Entites.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_ContractType")
                        .HasColumnType("int");

                    b.Property<int>("Id_Rank")
                        .HasColumnType("int");

                    b.Property<int>("Id_WorkSector")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnVacation")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VacationDays")
                        .HasColumnType("int");

                    b.Property<bool>("Want_24")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Domain.Entites.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<int>("Id_VacationType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vacation");
                });

            modelBuilder.Entity("Domain.Entites.WorkSector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("WorkSector");
                });

            modelBuilder.Entity("UserWorkSector", b =>
                {
                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.Property<int>("WorkSectorsId")
                        .HasColumnType("int");

                    b.HasKey("UsersId", "WorkSectorsId");

                    b.HasIndex("WorkSectorsId");

                    b.ToTable("UserWorkSector");
                });

            modelBuilder.Entity("Domain.Entites.PersonalRequests", b =>
                {
                    b.HasOne("Domain.Entites.Person.Duty", "Duties")
                        .WithMany("PersonalRequestss")
                        .HasForeignKey("DutiesId");

                    b.HasOne("Domain.Entites.User", "User")
                        .WithMany("PersonalRequestss")
                        .HasForeignKey("UserId");

                    b.Navigation("Duties");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entites.Schedule", b =>
                {
                    b.HasOne("Domain.Entites.Person.Duty", "Duties")
                        .WithMany("Schedules")
                        .HasForeignKey("DutiesId");

                    b.HasOne("Domain.Entites.User", "Users")
                        .WithMany("Schedules")
                        .HasForeignKey("UsersId");

                    b.HasOne("Domain.Entites.WorkSector", "WorkSectors")
                        .WithMany("Schedules")
                        .HasForeignKey("WorkSectorsId");

                    b.Navigation("Duties");

                    b.Navigation("Users");

                    b.Navigation("WorkSectors");
                });

            modelBuilder.Entity("UserWorkSector", b =>
                {
                    b.HasOne("Domain.Entites.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entites.WorkSector", null)
                        .WithMany()
                        .HasForeignKey("WorkSectorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entites.Person.Duty", b =>
                {
                    b.Navigation("PersonalRequestss");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Domain.Entites.User", b =>
                {
                    b.Navigation("PersonalRequestss");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Domain.Entites.WorkSector", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
